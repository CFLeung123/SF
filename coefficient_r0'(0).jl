# Define the input text
input_text = """
dot(p)_11(L=4)=  4.06644614491804513441452566932349009e-02

dot(p)_11(L=5)=  5.18711757366512642969981462741018397e-02

dot(p)_11(L=6)=  6.25335624963018836615989527298678702e-02

dot(p)_11(L=7)=  7.29651117622648387161274914481192442e-02

dot(p)_11(L=8)=  8.32353491549957726458719851683392956e-02

dot(p)_11(L=9)=  9.33761748042424242560688309093833441e-02

dot(p)_11(L=10)=  1.03414110425803600832697643816298345e-01

dot(p)_11(L=11)=  1.13371699857364656033962412638189256e-01

dot(p)_11(L=12)=  1.23266779814804901505723794131444919e-01

dot(p)_11(L=13)=  1.33112866383860486372123445407326476e-01

dot(p)_11(L=14)=  1.42920056704080880345983972583734482e-01

dot(p)_11(L=15)=  1.5269591849584397525245873285933541e-01

dot(p)_11(L=16)=  1.62446191871115910458938439258022711e-01

dot(p)_11(L=17)=  1.72175297258459779660282612072217662e-01

dot(p)_11(L=18)=  1.81886691902228052011152383072248486e-01

dot(p)_11(L=19)=  1.9158311915559177824229789958994369e-01

dot(p)_11(L=20)=  2.01266784482241970607954512066027644e-01

dot(p)_11(L=21)=  2.10939481638856667853334384014846714e-01

dot(p)_11(L=22)=  2.20602684697516206461509866191263484e-01

dot(p)_11(L=23)=  2.30257616284547611529946750082488296e-01

dot(p)_11(L=24)=  2.39905298968026691635485841881603338e-01

dot(p)_11(L=25)=  2.49546594496121073647505759247062901e-01

dot(p)_11(L=26)=  2.59182234133086119806363626239958152e-01

dot(p)_11(L=27)=  2.6881284237539716038539900651096036e-01

dot(p)_11(L=28)=  2.78438955679915523036944911605431789e-01

dot(p)_11(L=29)=  2.88061037388930621204692599964218616e-01

dot(p)_11(L=30)=  2.97679489724324182610592217771823101e-01

dot(p)_11(L=31)=  3.07294663501010570471621817518225754e-01

dot(p)_11(L=32)=  3.16906866049729966822408370390394621e-01

dot(p)_11(L=33)=  3.26516367722390895212903616029204083e-01

dot(p)_11(L=34)=  3.36123407266817142977056540327603541e-01

dot(p)_11(L=35)=  3.45728196293293007962384080059590512e-01

dot(p)_11(L=36)=  3.55330923006706297854831087981507885e-01

dot(p)_11(L=37)=  3.64931755341126345979738282210291057e-01

dot(p)_11(L=38)=  3.74530843605305913913935403866145644e-01

dot(p)_11(L=39)=  3.84128322725685050096201799247947953e-01

dot(p)_11(L=40)=  3.9372431415641669862078396948255078e-01

dot(p)_11(L=41)=  4.03318927512562616388838987960823342e-01

dot(p)_11(L=42)=  4.12912261972059435565100124386613267e-01

dot(p)_11(L=43)=  4.22504407483681952694490407660130659e-01

dot(p)_11(L=44)=  4.32095445811546677457965472163810715e-01

dot(p)_11(L=45)=  4.41685451441333457087331043583610641e-01

dot(p)_11(L=46)=  4.51274492369073912024264520112505092e-01

dot(p)_11(L=47)=  4.60862630789845009370134276713232589e-01

dot(p)_11(L=48)=  4.70449923700846045418993586990938245e-01

dot(p)_11(L=49)=  4.80036423430996565665513551537159778e-01

dot(p)_11(L=50)=  4.89622178107268729387367047292074238e-01

dot(p)_11(L=51)=  4.99207232066379580647731926989744519e-01

dot(p)_11(L=52)=  5.08791626219152742208141039481148396e-01

dot(p)_11(L=53)=  5.18375398373764425612234088389391438e-01

dot(p)_11(L=54)=  5.27958583523174795420542131020870167e-01

dot(p)_11(L=55)=  5.37541214101280103894950733997152968e-01

dot(p)_11(L=56)=  5.47123320211677411385085475427178766e-01

dot(p)_11(L=57)=  5.5670492983239091997161900858537289e-01

dot(p)_11(L=58)=  5.66286068999449747715549811771101933e-01

dot(p)_11(L=59)=  5.75866761971817312583256704296155327e-01

dot(p)_11(L=60)=  5.8544703137984088401518985805582169e-01

dot(p)_11(L=61)=  5.95026898359106855474722353957953549e-01

dot(p)_11(L=62)=  6.04606382671345112787353532633101618e-01

dot(p)_11(L=63)=  6.14185502813818087346228006397071572e-01

dot(p)_11(L=64)=  6.23764276118451353777034352799139406e-01
"""

#Extrapolation
using DoubleFloats
using Quadmath
const delta = 1
const Lmin = 4

# Extract the numbers using a regular expression
f = [parse(Float128, match(r"[-+]?\d*\.\d+([eE][-+]?\d+)?", line).match) for line in split(input_text, '\n') if match(r"[-+]?\d*\.\d+([eE][-+]?\d+)?", line)!==nothing]

print(f)


function R0(f)
    R0f = Array{Float128}(undef, length(f) - delta)
    for i in 1:length(f)-delta
        L = Lmin -1 +i
        R0f[i] = Float128(L / delta) * (f[i+delta] - f[i])
    end
    return R0f
end

function Rnu(nu, f)
    Rnuf = Array{Float128}(undef, length(f) - delta)
    for i in 1:length(f)-delta
        L = Lmin -1 +i
        Rnuf[i] = f[i] + Float128(L / (nu * delta)) * (f[i+delta] - f[i])
    end
    return Rnuf
end

function scale(f)
    for i in 1:length(f)
        L = Lmin -1+i
        f[i] = (1+1/Float128(2L))*f[i]
    end
    return f
end

function extrapolationf(f)
    final = Rnu(3,Rnu(3,Rnu(2,Rnu(2,Rnu(1,Rnu(1,f))))))
    println("    final = Rnu(3,Rnu(3,Rnu(2,Rnu(2,Rnu(1,Rnu(1,f))))))")
    for l in 1:length(final)
        @inbounds begin
            L = l - 1 + Lmin
            println(' ')
            println("Final(L=$L)= ", final[l])

        end
    end
end

for i in 1:length(f)
    L = Lmin-1+i
    f[i] = f[i] / L
    println(' ')
    println("f(L=$L)/L= ", f[i])
end

println(" -------------------------------------------------------- ")
extrapolationf(f)
